[gd_scene load_steps=33 format=2]

[ext_resource path="res://sprites/pony3.png" type="Texture" id=1]
[ext_resource path="res://sprites/pony5.png" type="Texture" id=2]
[ext_resource path="res://sprites/pony4.png" type="Texture" id=3]
[ext_resource path="res://sprites/pony1.png" type="Texture" id=4]
[ext_resource path="res://sprites/pony2.png" type="Texture" id=5]
[ext_resource path="res://sprites/horse5.png" type="Texture" id=6]
[ext_resource path="res://sprites/horse1.png" type="Texture" id=7]
[ext_resource path="res://sprites/horse2.png" type="Texture" id=8]
[ext_resource path="res://scripts/player.gd" type="Script" id=9]
[ext_resource path="res://sprites/horse3.png" type="Texture" id=10]
[ext_resource path="res://sprites/horse4.png" type="Texture" id=11]
[ext_resource path="res://sprites/unicorn1.png" type="Texture" id=12]
[ext_resource path="res://sprites/unicorn2.png" type="Texture" id=13]
[ext_resource path="res://sprites/unicorn3.png" type="Texture" id=14]
[ext_resource path="res://sprites/unicorn4.png" type="Texture" id=15]
[ext_resource path="res://sprites/unicorn5.png" type="Texture" id=16]
[ext_resource path="res://sprites/shadow2.png" type="Texture" id=17]
[ext_resource path="res://sprites/shadow1.png" type="Texture" id=18]
[ext_resource path="res://sprites/shadow4.png" type="Texture" id=19]
[ext_resource path="res://sprites/shadow5.png" type="Texture" id=20]
[ext_resource path="res://sprites/shadow3.png" type="Texture" id=21]
[ext_resource path="res://fonts/prstartk.ttf" type="DynamicFontData" id=22]
[ext_resource path="res://sprites/super_chomp2.png" type="Texture" id=23]
[ext_resource path="res://sprites/super_chomp1.png" type="Texture" id=24]
[ext_resource path="res://sprites/super_chomp3.png" type="Texture" id=25]

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 18 ), ExtResource( 17 ), ExtResource( 21 ), ExtResource( 19 ), ExtResource( 20 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;
uniform bool white;
uniform bool applyrainbow;
uniform bool dooutline;

const float PI = 3.1415926535;
uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;


uniform vec4 line_color : hint_color = vec4(0.84, 0.15, 0.15, 1.0);//color line
uniform float line_scale : hint_range(0, 20) = 2.353;   // thickness of the line
uniform float frequency : hint_range(0.0, 2.0) = 0.5;  // frequency of the rainbow
uniform float light_offset : hint_range(0.00001, 1.0) = 0.5;   // this offsets all color channels;
uniform float alpha : hint_range(0.0, 1.0) = 1.0;


void fragment()
{
	vec4 color = texture(TEXTURE, UV);
	
	if (white)
	{
		COLOR = vec4(1, 1, 1, color.a);
	}
	else if(dooutline)
	{
		vec2 size = TEXTURE_PIXEL_SIZE * line_scale;
		
		float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
		outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
		outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
		outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
		outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
		outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
		outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
		outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
		outline = min(outline, 1.0);
		
		vec4 animated_line_color = vec4(light_offset + sin(2.0*3.14*frequency*TIME),
								   light_offset + sin(2.0*3.14*frequency*TIME + radians(120.0)),
								   light_offset + sin(2.0*3.14*frequency*TIME + radians(240.0)),
								   alpha);
		
		COLOR = mix(color, line_color , outline - color.a);
	}
	else if(applyrainbow)
	{
		float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
		hue = fract(hue + fract(TIME  * speed));
		float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
		vec3 rainbow;
		if(hue < 1./6.){
			rainbow = vec3(1., x, 0.);
		} else if (hue < 1./3.) {
			rainbow = vec3(x, 1., 0);
		} else if (hue < 0.5) {
			rainbow = vec3(0, 1., x);
		} else if (hue < 2./3.) {
			rainbow = vec3(0., x, 1.);
		} else if (hue < 5./6.) {
			rainbow = vec3(x, 0., 1.);
		} else {
			rainbow = vec3(1., 0., x);
		}
		COLOR = mix(color, vec4(rainbow, color.a), strength);
	}
	else
	{
		COLOR = color;
	}
}

"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/white = false
shader_param/applyrainbow = false
shader_param/dooutline = false
shader_param/strength = 0.5
shader_param/speed = 0.5
shader_param/angle = 0.0
shader_param/line_color = Color( 0.84, 0.15, 0.15, 1 )
shader_param/line_scale = 2.353
shader_param/frequency = 0.5
shader_param/light_offset = 0.5
shader_param/alpha = 1.0

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ ExtResource( 12 ), ExtResource( 13 ), ExtResource( 14 ), ExtResource( 15 ), ExtResource( 16 ) ],
"loop": true,
"name": "unicorn_walking",
"speed": 5.0
}, {
"frames": [ ExtResource( 7 ), ExtResource( 8 ), ExtResource( 10 ), ExtResource( 11 ), ExtResource( 6 ) ],
"loop": true,
"name": "pegasus_walking",
"speed": 5.0
}, {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 1 ), ExtResource( 3 ), ExtResource( 2 ) ],
"loop": true,
"name": "pony_walking",
"speed": 5.0
}, {
"frames": [ ExtResource( 24 ), ExtResource( 23 ), ExtResource( 25 ), ExtResource( 23 ) ],
"loop": true,
"name": "super_chomp",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=1]
radius = 7.07107

[sub_resource type="CircleShape2D" id=7]
radius = 29.0172

[sub_resource type="DynamicFont" id=4]
size = 8
font_data = ExtResource( 22 )

[node name="player" type="Area2D"]
script = ExtResource( 9 )

[node name="shadow" type="AnimatedSprite" parent="."]
modulate = Color( 1, 1, 1, 0.329412 )
position = Vector2( 3, 14 )
scale = Vector2( 0.833333, 0.833333 )
frames = SubResource( 3 )
frame = 2
playing = true

[node name="sprite" type="AnimatedSprite" parent="."]
material = SubResource( 6 )
frames = SubResource( 2 )
animation = "pony_walking"
frame = 4
playing = true

[node name="collider" type="CollisionShape2D" parent="."]
position = Vector2( 5, 0 )
shape = SubResource( 1 )

[node name="collider_chomp" type="CollisionShape2D" parent="."]
position = Vector2( 0, 1 )
shape = SubResource( 7 )
disabled = true

[node name="pos_pony" type="Position2D" parent="."]
position = Vector2( 27, -5 )

[node name="pos_unicorn" type="Position2D" parent="."]
position = Vector2( 26, -15 )

[node name="pos_pegasus" type="Position2D" parent="."]
position = Vector2( 26, -15 )

[node name="pos_chomp" type="Position2D" parent="."]
position = Vector2( -16, 0 )

[node name="name_label" type="Label" parent="."]
margin_left = -20.0
margin_top = 18.0
margin_right = 20.0
margin_bottom = 26.0
rect_pivot_offset = Vector2( 20, 0 )
custom_fonts/font = SubResource( 4 )
text = "P1"
align = 1

[connection signal="area_entered" from="." to="." method="_on_player_area_entered"]
